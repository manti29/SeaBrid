$(function () {
    initTree();
    bindQuery();
    bindUserBranchRoles();
    bindOtherBranchRoles();
    bindSave();
    bindAdd();
    bindRemove();
    0 != $("#username").val().replace(/(^s*)|(s*$)/g, "").length && getUserAuthAndInitTables()
});
function initTree() {
    $("#branchtree").treeview({
        data: getBranchTree("../../api/admin/branch_tree/"),
        nodeIcon: "glyphicon",
        emptyIcon: "glyphicon",
        expandIcon: "glyphicon glyphicon-plus",
        collapseIcon: "glyphicon glyphicon-minus",
        showTags: !0,
        levels: 3,
        onNodeSelected: function (a, b) {
            $("#branch_code").val(b.no)
        }
    });
    $("#branchtree1>ul>li:first").click()
}
function bindQuery() {
    $("#q_auth").click(function () {
        getUserAuthAndInitTables()
    })
}
function bindUserBranchRoles() {
    $("#user_branch_roles").click(function () {
        getBranchRoleList($("#user_branch_no").val(), $("#other_branch_roles"), $("#user_branch_roles"), !1)
    })
}
function bindOtherBranchRoles() {
    $("#other_branch_roles").click(function () {
        $("#modal_branch input#branch_code").val("");
        $("#modal_branch").modal("show")
    });
    $("#branch_ok").click(function () {
        getBranchRoleList($("#modal_branch input#branch_code").val(), $("#user_branch_roles"), $("#other_branch_roles"), !0)
    })
}
function getBranchRoleList(a, b, e, c) {
    $.ajax({type: "get", url: "../../api/admin/roles/?method=head", data: {branchNo: a, stat: "A"}}).done(function (a) {
        0 === a.code ? (t1 = initRoleTable("#table-not-owned", a.data), b.addClass("btn-warning").removeClass("btn-default").removeClass("disabled"), e.removeClass("btn-warning").addClass("btn-default").addClass("disabled"), c && $("#modal_branch").modal("hide")) : sysAlert("error", "\u9519\u8bef\uff01", "\u67e5\u8be2\u89d2\u8272\u5931\u8d25\u3002[" + a.msg + " " + a.code + "]")
    }).fail(function (a) {
        sysAlert("error",
            "\u9519\u8bef\uff01", "\u67e5\u8be2\u89d2\u8272\u5931\u8d25\u3002[" + a.status + " " + a.statusText + "]")
    })
}
var t1 = null, t2 = null, userAuth = "";
function setUserAuthVar() {
    userAuth = "";
    for (var a = 0; a < t2.rows().nodes().length; a++)userAuth += t2.row(a).data().roleId + ","
}
function getOwnedRoleIds() {
    setUserAuthVar();
    "" != userAuth && (userAuth = userAuth.substring(0, userAuth.length - 1));
    return userAuth
}
function getUserAuthAndInitTables() {
    0 != $("#username").val().replace(/(^s*)|(s*$)/g, "").length && $.ajax({
        type: "get",
        url: "../../api/admin/users/" + encodeURI($("#username").val()) + "/auth/"
    }).done(function (a) {
        0 === a.code ? ($("#auth_area").removeClass("hidden"), t2 = initRoleTable("#table-owned", a.data.owned_roles), setUserAuthVar(), getBranchRoleList(a.data.userBranchNo, $("#other_branch_roles"), $("#user_branch_roles"), !1), $("#username_hidden").val($("#username").val()), $("#user_branch_no").val(a.data.userBranchNo)) :
            (sysAlert("error", "\u9519\u8bef\uff01", "\u7528\u6237\u6388\u6743\u5931\u8d25\u3002[" + a.msg + " " + a.code + "]"), $("#auth_area").addClass("hidden"), $("#username_hidden").val(""), $("#user_branch_no").val(""))
    }).fail(function (a) {
        sysAlert("error", "\u9519\u8bef\uff01", "\u7528\u6237\u6388\u6743\u5931\u8d25\u3002[" + a.status + " " + a.statusText + "]");
        $("#auth_area").addClass("hidden");
        $("#username_hidden").val("");
        $("#user_branch_no").val("")
    })
}
function initRoleTable(a, b) {
    "#table-not-owned" === a && null != t1 && (t1.destroy(), setUserAuthVar());
    "#table-owned" === a && null != t2 && t2.destroy();
    return $(a).DataTable({
        paging: !1,
        info: !1,
        language: {url: "../../static/datatables/locale/zh_CN.txt"},
        data: b,
        columns: [{data: "roleId"}, {data: "roleName"}, {data: "branchName"}],
        columnDefs: [{type: "chinese", targets: [1, 2]}, {searchable: !1, visible: !1, targets: 0}],
        order: [[2, "asc"], [1, "asc"]],
        initComplete: function () {
            for (var b = this.api(), c = 0; c < b.rows().nodes().length; c++) {
                var d =
                    b.row(c).nodes().to$();
                d.data("roleId", b.row(c).data().roleId);
                d.data("roleName", b.row(c).data().roleName);
                d.data("branchName", b.row(c).data().branchName);
                "#table-not-owned" === a && 0 <= userAuth.indexOf(d.data("roleId") + ",") && t1.row(c).nodes().to$().addClass("selected")
            }
            b.rows(".selected").remove().draw(!1);
            b.$("tr").click(onRowClicked)
        }
    })
}
function onRowClicked() {
    $(this).toggleClass("selected")
}
function exchangeRows(a, b, e) {
    a.rows(".selected").nodes().to$().each(function () {
        var a = {roleId: $(this).data().roleId, roleName: $(this).data().roleName, branchName: $(this).data().branchName};
        b.row.add(a).draw(!1).nodes().to$().on("click", onRowClicked).data(a)
    });
    a.rows(".selected").remove().draw(!1);
    b.rows(".selected").nodes().to$().removeClass("selected")
}
function bindAdd() {
    $("#add").click(function () {
        exchangeRows(t1, t2)
    })
}
function bindRemove() {
    $("#remove").click(function () {
        exchangeRows(t2, t1)
    })
}
function bindSave(a) {
    $("#save").click(function () {
        $.ajax({
            type: "post",
            url: "../../api/admin/users/" + $("#username_hidden").val() + "/auth/",
            data: {id: getOwnedRoleIds()}
        }).done(function (a) {
            0 === a.code ? sysAlert("success", "\u4fdd\u5b58\u6210\u529f\uff01", "\u4fdd\u5b58\u6210\u529f\u3002") : sysAlert("error", "\u9519\u8bef\uff01", "\u4fdd\u5b58\u5931\u8d25\u3002[" + a.msg + " " + a.code + "]")
        }).fail(function (a) {
            sysAlert("error", "\u9519\u8bef\uff01", "\u4fdd\u5b58\u5931\u8d25\u3002[" + a.status + " " + a.statusText + "]")
        })
    })
};
